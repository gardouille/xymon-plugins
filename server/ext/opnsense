#!/usr/bin/env python
# -*- coding: utf-8 -*-
# To enable opnsense tests, add the "opnsense" tag to hosts.cfg. place password in opnsensepasswd file in $XYMONHOME directory
import os
import subprocess
import requests
import Hobbit
from xymon_utils import cache as xymon_cache

username = 'status'
passwordfile = os.path.join(os.environ.get('XYMONHOME', '/usr/lib/xymon/server'), 'etc', 'opnsensepasswd')

def get_password(host, username, passfile):
    with open(passfile) as f:
        for line in f.read().splitlines():
            parts = line.split(':')
            if parts[0:2] == [host, username]:
                return parts[2:5]
    return ()

@xymon_cache('fwstatus', 3600)
def firmware_status(host, api):
    r = api.get('https://%s/api/core/firmware/status' % host)
    if r.status_code != 200:
        return None

    return r.json()

def check_updates(host, api):

    fwstatus = firmware_status(host, api)

    bb = Hobbit.Hobbit(test='opn', hostname=host)
    if fwstatus is None:
        bb.color_line('red', 'Error reading firmware status (code: %d)' % r.status_code)
        bb.send()
        return

    if 'There are no updates available' in fwstatus['status_msg']:
        bb.add_color('green')
    else:
        bb.add_color('red')

    bb.lineprint(fwstatus['status_msg'])

    bb.send()

def monitor_firewall(ip, host):
    (password, key, secret) = get_password(host, username, passwordfile)

    api = requests.session()
    api.auth = (key, secret)

    check_updates(host, api)

hosts = subprocess.Popen('xymongrep --noextras opnsense', shell=True, stdout=subprocess.PIPE)
for line in hosts.stdout:
    ip, host = line.split(' ')[:2]
    monitor_firewall(ip, host)
